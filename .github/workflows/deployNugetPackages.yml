name: 'deployNugetPackages'

on:
  push:
    branches:
    - main
    - 'release/**'
  pull_request:
    branches:
    - main
    - 'release/**'

  workflow_dispatch:

env:
  VERSION_SUFFIX: ${{ github.ref_name }}
  OUTDIR: ${{ github.workspace }}\output
                    
jobs:
  deploy:
    name: 'Deploy packages'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
    steps:
     - name: 'echo VERSION_SUFFIX'
       shell: bash
       run: echo ${{ env.VERSION_SUFFIX }}

     - name: 'Set VERSION_SUFFIX: dev'
       if: ${{ github.ref_name }} == 'main'
       shell: bash
       run: echo "VERSION_SUFFIX=dev" >> $GITHUB_ENV

     - name: 'Set VERSION_SUFFIX: string.Empty'
       if: ${{ startsWith(github.ref_name, 'release/v') }}
       shell: bash
       run: echo "VERSION_SUFFIX=" >> $GITHUB_ENV

     - name: 'Set VERSION_SUFFIX: alpha'
       if: ${{ startsWith(github.ref_name, 'release/alpha') }}
       shell: bash
       run: echo "VERSION_SUFFIX=alpha" >> $GITHUB_ENV

     - name: 'Set VERSION_SUFFIX: beta'
       if: ${{ startsWith(github.ref_name, 'release/beta') }}
       shell: bash
       run:  echo "VERSION_SUFFIX=beta" >> $GITHUB_ENV

     - name: 'Checkout'
       uses: actions/checkout@v3
     - name: 'Install dotnet'
       uses: actions/setup-dotnet@v2
       with:
         dotnet-version: '6.0.x'

     - name: 'Add GitHub to Nuget source'
       uses: 'Andre-Loetzsch/actions/addGitHubToNugetSource@main'
       with:
         github_token: ${{ secrets.GITHUB_TOKEN }}

     - name: 'Build and test Tentakel.Extensions.Configuration.sln'
       uses: Andre-Loetzsch/actions/buildAndTestSolution@main
       with:
         solution: '${{ github.workspace }}\Tentakel.Extensions.Configuration\Tentakel.Extensions.Configuration.sln'
         version-suffix: ${{ env.VERSION_SUFFIX }}
         outdir: ${{ env.OUTDIR }}
         github_token: ${{ secrets.GITHUB_TOKEN }}

     - name: 'Build and test Tentakel.Extensions.Configuration.Json.sln'
       uses: Andre-Loetzsch/actions/buildAndTestSolution@main
       with:
         solution: '${{ github.workspace }}\Tentakel.Extensions.Configuration.Json\Tentakel.Extensions.Configuration.Json.sln'
         version-suffix: ${{ env.VERSION_SUFFIX }}
         outdir: ${{ env.OUTDIR }}
         github_token: ${{ secrets.GITHUB_TOKEN }}

     - name: 'Build and test Tentakel.Extensions.DependencyInjection.sln'
       uses: Andre-Loetzsch/actions/buildAndTestSolution@main
       with:
         solution: '${{ github.workspace }}\Tentakel.Extensions.DependencyInjection\Tentakel.Extensions.DependencyInjection.sln'
         version-suffix: ${{ env.VERSION_SUFFIX }}
         outdir: ${{ env.OUTDIR }}
         github_token: ${{ secrets.GITHUB_TOKEN }}
         
     - name: 'Build and test Tentakel.Extensions.Logging.sln'
       uses: Andre-Loetzsch/actions/buildAndTestSolution@main
       with:
         solution: '${{ github.workspace }}\Tentakel.Extensions.Logging\Tentakel.Extensions.Logging.sln'
         version-suffix: ${{ env.VERSION_SUFFIX }}
         outdir: ${{ env.OUTDIR }}
         github_token: ${{ secrets.GITHUB_TOKEN }}

     - name: 'Build and test Tentakel.Extensions.Logging.Abstractions.sln'
       uses: Andre-Loetzsch/actions/buildAndTestSolution@main
       with:
         solution: '${{ github.workspace }}\Tentakel.Extensions.Logging.Abstractions\Tentakel.Extensions.Logging.Abstractions.sln'
         version-suffix: ${{ env.VERSION_SUFFIX }}
         outdir: ${{ env.OUTDIR }}
         github_token: ${{ secrets.GITHUB_TOKEN }}
         

     - name: 'Build and test Tentakel.Extensions.Logging.Console.sln'
       uses: Andre-Loetzsch/actions/buildAndTestSolution@main
       with:
         solution: '${{ github.workspace }}\Tentakel.Extensions.Logging.Console\Tentakel.Extensions.Logging.Console.sln'
         version-suffix: ${{ env.VERSION_SUFFIX }}
         outdir: ${{ env.OUTDIR }}
         github_token: ${{ secrets.GITHUB_TOKEN }}


     - name: 'Build and test Tentakel.Extensions.Logging.File.sln'
       uses: Andre-Loetzsch/actions/buildAndTestSolution@main
       with:
         solution: '${{ github.workspace }}\Tentakel.Extensions.Logging.File\Tentakel.Extensions.Logging.File.sln'
         version-suffix: ${{ env.VERSION_SUFFIX }}
         outdir: ${{ env.OUTDIR }}
         github_token: ${{ secrets.GITHUB_TOKEN }}

     - name: 'Build and test Tentakel.Extensions.Logging.TextFormatters.sln'
       uses: Andre-Loetzsch/actions/buildAndTestSolution@main
       with:
         solution: '${{ github.workspace }}\Tentakel.Extensions.Logging.TextFormatters\Tentakel.Extensions.Logging.TextFormatters.sln'
         version-suffix: ${{ env.VERSION_SUFFIX }}
         outdir: ${{ env.OUTDIR }}
         github_token: ${{ secrets.GITHUB_TOKEN }}

     - name: 'Build and test Tentakel.Extensions.Logging.TextFormatters.Abstractions.sln'
       uses: Andre-Loetzsch/actions/buildAndTestSolution@main
       with:
         solution: '${{ github.workspace }}\Tentakel.Extensions.Logging.TextFormatters.Abstractions\Tentakel.Extensions.Logging.TextFormatters.Abstractions.sln'
         version-suffix: ${{ env.VERSION_SUFFIX }}
         outdir: ${{ env.OUTDIR }}
         github_token: ${{ secrets.GITHUB_TOKEN }}


     - name: 'Build and test Tentakel.Extensions.Logging.ZipFile.sln'
       uses: Andre-Loetzsch/actions/buildAndTestSolution@main
       with:
         solution: '${{ github.workspace }}\Tentakel.Extensions.Logging.ZipFile\Tentakel.Extensions.Logging.ZipFile.sln'
         version-suffix: ${{ env.VERSION_SUFFIX }}
         outdir: ${{ env.OUTDIR }}
         github_token: ${{ secrets.GITHUB_TOKEN }}


     - name: 'push nuget packages'
       if: matrix.os == 'windows-latest'
       uses: Andre-Loetzsch/actions/pushNugetPackages@main
       with:
         outdir: ${{ env.OUTDIR }}
         github_token: ${{ secrets.GITHUB_TOKEN }}
